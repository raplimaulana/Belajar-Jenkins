### MENGGUNAKAN LIBRARY ###

##Groovy Pipeline Plugin
Setelah Shared Library teregistrasi di Jenkins, kita bisa menggunakan Shared Library dengan menggunakan Groovy Pipeline plugin .
https://plugins.jenkins.io/pipeline-groovy-lib/
Secara default harusnya Groovy Pipeline akan terinstall ketika kita menginstall Jenkins Pipeline.

##@Library
Untuk menggunakan Shared Library yang sudah teregistrasi, kita bisa menggunakan perintah @Library, misal:
- @Library(“nama-shared-library”)
- @Library(“nama-shared-library@tag”)
- @Library(“nama-shared-library@branch”)

##Menggunakan Vars
Secara default, saat menggunakan @Library, kita perlu menyebutkan class Groovy satu per satu jika ingin kita gunakan.
Kadang ada kalanya kita ingin meng-import (menggunakan) file groovy yang terdapat di vars secara otomatis tanpa harus import satu per satu.
Kita bisa tambahkan _ (garis bawah) setelah @Library, misal: 
@Library(“nama-shared-library@branch”) _
Secara otomatis file yang terdapat di vars akan menjadi global variable yang bisa kita gunakan.

##Menggunakan Project
Sekarang kita akan menggunakan contoh project yang sebelumnya sudah kita buat (https://github.com/raplimaulana/belajar-jenkins-pipeline).
git clone git@github.com:raplimaulana/belajar-jenkins-pipeline.git app

##Kode : Jenkinsfile
vim Jenkinsfile

@Library("belajar-jenkins-shared-library@main")_

pipeline{
    agent any
    stages{
        stage("Hello World"){
            steps{
                script{
                    hello.world()
                }
            }
        }
    }
}

##Membuat Multi Branch Pipeline
Akses jenkins via browser > Dashboard > New Item > Beri nama Job baru > klik 'Multibranch Pipeline' > OK > Pada bagian 'Build Configuration', modenya hanya bisa 'by Jenkinsfile' > 
Pada bagian 'Branch Sources', pilih 'Add source' > Pilih 'Git' > Masukan link Github ke bagian 'Project Repository' > Pilih credential yang memiliki akses ke akun Github > 
Pada bagian 'Scan Multibranch Pipeline Triggers', centang 'Periodically if not otherwise run' agar selalu melakukan scanning apabila ada branch baru atau branch yang dihapus, sehingga branch selalu up-to-date >
Pilih waktu scanning yang akan dilakukan oleh Jenkins, misal setiap 1 menit > Masukan lokasi file Jenkinsfile disimpan > Save > Build Now 
